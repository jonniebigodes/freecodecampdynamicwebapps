'use strict';var AuthController=require('./AuthController'),NightsController=require('./NightLifeController'),StocksController=require('./StockSearchController'),BooksController=require('./BooksController'),PollsController=require('./PollsController'),dbService=require('./dbFactory'),path=require('path'),LocalStrategy=require('passport-local').Strategy;module.exports=function(a,b){b.serializeUser(function(a,b){console.log('===================================='),console.log('serialize usser:'+JSON.stringify(a)),console.log('===================================='),b(null,a.id)}),b.deserializeUser(function(a,b){console.log('===================================='),console.log('deserialize user:'+a),console.log('===================================='),dbService.connect().then(function(){return dbService.searchByID({collectionName:'users',queryParam:{_id:a}})}).then(function(a){dbService.disconnect(),b(null,a[0])}).catch(function(a){return dbService.disconnect(),console.log('===================================='),console.log('error deserializing user:'+a),console.log('===================================='),b(a,null)})}),b.use('local-login',new LocalStrategy({userNameField:'mail',passwordField:'password',passReqToCallback:!0},function(a,b,c,d){console.log('===================================='),console.log('LocalStrategy login'),console.log('===================================='),dbService.setUrl(a.app.MONGODB),dbService.connect().then(function(){return dbService.search({collectionName:'users',queryParam:{local_email:b}})}).then(function(a){return dbService.disconnect(),a.length?(console.log('===================================='),console.log('local login resultsearch id:'+a[0]._id+'\n email:'+a[0].local_email),console.log('===================================='),'PWD_OK'===dbService.comparePassword(c,a[0].local_password)?d(null,{id:a[0]._id,twitter_id:'0',twitter_user_token:'0',twitter_username:'0',twitter_display_name:'0',local_password:c,local_email:b,facebook_id:'0',facebook_token:'0',facebook_display_name:'0',facebook_username:'0',full_name:a[0].full_name,city:a[0].city,state:a[0].state,country:a[0].country}):d(null,!1)):d(null,!1)}).catch(function(a){return dbService.disconnect(),console.log('===================================='),console.log('error local-login err:'+a),console.log('===================================='),d(a)})})),b.use('local-signup',new LocalStrategy({userNameField:'mail',passwordField:'password',passReqToCallback:!0},function(a,b,c,d){console.log('===================================='),console.log('local-signup req.body.email:'+a.body.username+' email:'+b+' password:'+c),console.log('===================================='),dbService.setUrl(a.app.MONGODB),dbService.connect().then(function(){return dbService.search({collectionName:'users',queryParam:{local_email:b}})}).then(function(a){if(console.log('===================================='),console.log('local-signup resultsearch len:'+a.length),console.log('===================================='),a.length)return dbService.disconnect(),d(null,!1);var e={twitter_id:'0',twitter_user_token:'0',twitter_username:'0',twitter_display_name:'0',local_password:c,local_email:b,facebook_id:'0',facebook_token:'0',facebook_display_name:'0',facebook_username:'0',full_name:'0',city:'0',state:'0',country:'0'};dbService.injectOneItem({collectionName:'users',data:e}).then(function(a){return dbService.disconnect(),console.log('===================================='),console.log('data was injected'),console.log('===================================='),e.id=a,console.log('===================================='),console.log('to be serialized:'+e.id+'\nlocal_email:'+e.local_email+' local_password:'+e.local_password),console.log('===================================='),d(null,e)}).catch(function(a){return console.log('===================================='),console.log('error strat inject data err:'+a),console.log('===================================='),d(a,null)})}).catch(function(a){return dbService.disconnect(),console.log('===================================='),console.log('error local-login err:'+a),console.log('===================================='),d(a)})})),a.post('/api/login/local/auth',b.authenticate('local-login',{successRedirect:'/api/login/sucess',failureRedirect:'/api/login/fail'})),a.post('/api/login/local/signup',b.authenticate('local-signup',{successRedirect:'/api/login/sucess',failureRedirect:'/api/login/fail'})),a.get('/api/login/sucess',function(a,b){console.log('===================================='),console.log('login sucess result:'+a.user._id),console.log('===================================='),b.writeHead(200,{"Content-Type":'application/json'}),b.end(JSON.stringify({authToken:a.user._id,full_name:'0'==a.user.full_name?'':a.user.full_name,city:'0'==a.user.city?'':a.user.city,countrystate:'0'==a.user.state?'':a.user.state,country:'0'==a.user.country?'':a.user.country}))}),a.get('/api/login/fail',function(a,b){b.writeHead(500,{"Content-Type":'application/json'}),b.end(JSON.stringify({code:'fccda001',reason:'LOGIN_NOK'}))}),a.get('/api/login/logoutok',function(a,b){b.writeHead(200,{"Content-Type":'application/json'}),b.end(JSON.stringify({code:'fccda003',reason:'SESSION TERMINATED'}))}),a.get('/api/login/logout',function(a,b){a.logout(),b.redirect('/api/login/logoutok')}),a.post('/api/login/local/authdatachange',AuthController.changeUserData),a.get('/api/data/nightsearch',NightsController.searchNights),a.post('/api/data/nightadd',NightsController.addNights),a.post('/api/data/nightremove',NightsController.removeNights),a.get('/api/data/usersearches',NightsController.getUserSearches),a.get('/api/data/stocksearch',StocksController.searchStockData),a.get('/api/data/getbooks',BooksController.getAllBooks),a.post('/api/data/bookadd',BooksController.addBookCollection),a.post('/api/data/tradebook',BooksController.tradeBook),a.get('/api/data/tradereject',BooksController.tradeReject),a.get('/api/data/tradeaccept',BooksController.tradeAccept),a.get('/api/data/getpolls',PollsController.getPolls),a.get('/api/data/getpolldetail',PollsController.getPollDetails),a.post('/api/data/delpoll',PollsController.deletePoll),a.post('/api/data/createpoll',PollsController.createPoll),a.post('/api/data/pollvote',PollsController.voteOnPoll),a.post('/api/data/addpolloption',PollsController.addPollOption),a.get('*',function(a,b){b.sendFile('index.html',{root:path.join(__dirname,'../dist/')})})};
